{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";function ProtectedRoute(_ref){let{children,adminRequired=false}=_ref;const{user,userRole,loading}=useAuth();// Добавете тези логове\nconsole.log('ProtectedRoute - проверка:',{user:user?true:false,userRole,adminRequired,hasAdminRights:userRole&&(userRole.role==='super_admin'||userRole.role==='restaurant_admin')});if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"\\u0417\\u0430\\u0440\\u0435\\u0436\\u0434\\u0430\\u043D\\u0435...\"});}if(!user){console.log('ProtectedRoute - няма потребител, пренасочване към /login');return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(adminRequired){const hasAdminRights=userRole&&(userRole.role==='super_admin'||userRole.role==='restaurant_admin');console.log('ProtectedRoute - проверка за админ права:',hasAdminRights);if(!hasAdminRights){console.log('ProtectedRoute - няма админ права, пренасочване към /');return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}}return children;}export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","adminRequired","user","userRole","loading","console","log","hasAdminRights","role","to"],"sources":["D:/Belezza/restaurant-chain-app/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction ProtectedRoute({ children, adminRequired = false }) {\r\n  const { user, userRole, loading } = useAuth();\r\n  \r\n  // Добавете тези логове\r\n  console.log('ProtectedRoute - проверка:', {\r\n    user: user ? true : false,\r\n    userRole,\r\n    adminRequired,\r\n    hasAdminRights: userRole && (userRole.role === 'super_admin' || userRole.role === 'restaurant_admin')\r\n  });\r\n  \r\n  if (loading) {\r\n    return <div>Зареждане...</div>;\r\n  }\r\n  \r\n  if (!user) {\r\n    console.log('ProtectedRoute - няма потребител, пренасочване към /login');\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  \r\n  if (adminRequired) {\r\n    const hasAdminRights = userRole && (userRole.role === 'super_admin' || userRole.role === 'restaurant_admin');\r\n    console.log('ProtectedRoute - проверка за админ права:', hasAdminRights);\r\n    \r\n    if (!hasAdminRights) {\r\n      console.log('ProtectedRoute - няма админ права, пренасочване към /');\r\n      return <Navigate to=\"/\" />;\r\n    }\r\n  }\r\n  \r\n  return children;\r\n}\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAsC,IAArC,CAAEC,QAAQ,CAAEC,aAAa,CAAG,KAAM,CAAC,CAAAF,IAAA,CACzD,KAAM,CAAEG,IAAI,CAAEC,QAAQ,CAAEC,OAAQ,CAAC,CAAGT,OAAO,CAAC,CAAC,CAE7C;AACAU,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAE,CACxCJ,IAAI,CAAEA,IAAI,CAAG,IAAI,CAAG,KAAK,CACzBC,QAAQ,CACRF,aAAa,CACbM,cAAc,CAAEJ,QAAQ,GAAKA,QAAQ,CAACK,IAAI,GAAK,aAAa,EAAIL,QAAQ,CAACK,IAAI,GAAK,kBAAkB,CACtG,CAAC,CAAC,CAEF,GAAIJ,OAAO,CAAE,CACX,mBAAOP,IAAA,QAAAG,QAAA,CAAK,2DAAY,CAAK,CAAC,CAChC,CAEA,GAAI,CAACE,IAAI,CAAE,CACTG,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC,CACxE,mBAAOT,IAAA,CAACH,QAAQ,EAACe,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,GAAIR,aAAa,CAAE,CACjB,KAAM,CAAAM,cAAc,CAAGJ,QAAQ,GAAKA,QAAQ,CAACK,IAAI,GAAK,aAAa,EAAIL,QAAQ,CAACK,IAAI,GAAK,kBAAkB,CAAC,CAC5GH,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAEC,cAAc,CAAC,CAExE,GAAI,CAACA,cAAc,CAAE,CACnBF,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC,CACpE,mBAAOT,IAAA,CAACH,QAAQ,EAACe,EAAE,CAAC,GAAG,CAAE,CAAC,CAC5B,CACF,CAEA,MAAO,CAAAT,QAAQ,CACjB,CAEA,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}