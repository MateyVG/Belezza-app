{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{createClient}from'@supabase/supabase-js';import{useAuth}from'../context/AuthContext';import'../styles/Admin.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const supabaseUrl='https://lnquyopfvuikhjbjsiqk.supabase.co';const supabaseKey='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxucXV5b3BmdnVpa2hqYmpzaXFrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0ODA5MDEsImV4cCI6MjA2MTA1NjkwMX0.GmZ-5FzZkJyMorLGggF_Jegx2Atn0wRiNKCx4esecJw';const supabase=createClient(supabaseUrl,supabaseKey);function UserReservations(){const{user}=useAuth();const[reservations,setReservations]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchReservations=async()=>{try{if(!user)return;// Зареждане на резервации за потребителя\nconst{data,error}=await supabase.from('reservations').select(`\n            *,\n            restaurants:restaurant_id(id, name, address, image_url),\n            tables:table_id(table_number, capacity)\n          `).eq('email',user.email).order('date',{ascending:true});if(error)throw error;setReservations(data);}catch(error){console.error('Грешка при зареждане на резервации:',error);}finally{setLoading(false);}};fetchReservations();},[user]);const cancelReservation=async id=>{try{const{error}=await supabase.from('reservations').update({status:'cancelled'}).eq('id',id);if(error)throw error;// Обновяване на списъка с резервации\nsetReservations(reservations.map(res=>res.id===id?{...res,status:'cancelled'}:res));}catch(error){console.error('Грешка при отказване на резервация:',error);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u0417\\u0430\\u0440\\u0435\\u0436\\u0434\\u0430\\u043D\\u0435 \\u043D\\u0430 \\u0440\\u0435\\u0437\\u0435\\u0440\\u0432\\u0430\\u0446\\u0438\\u0438...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"user-reservations-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u041C\\u043E\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0437\\u0435\\u0440\\u0432\\u0430\\u0446\\u0438\\u0438\"}),reservations.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-reservations\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u041D\\u044F\\u043C\\u0430\\u0442\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u0438 \\u0440\\u0435\\u0437\\u0435\\u0440\\u0432\\u0430\\u0446\\u0438\\u0438.\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"reservations-list\",children:reservations.map(reservation=>/*#__PURE__*/_jsxs(\"div\",{className:`reservation-card ${reservation.status}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:reservation.restaurants.name}),/*#__PURE__*/_jsx(\"span\",{className:`reservation-status ${reservation.status}`,children:reservation.status==='confirmed'?'Потвърдена':reservation.status==='cancelled'?'Отказана':'Чакаща'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0414\\u0430\\u0442\\u0430:\"}),\" \",reservation.date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0427\\u0430\\u0441:\"}),\" \",reservation.time]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041C\\u0430\\u0441\\u0430 \\u2116:\"}),\" \",reservation.tables.table_number]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0411\\u0440\\u043E\\u0439 \\u0433\\u043E\\u0441\\u0442\\u0438:\"}),\" \",reservation.guests_count]})]}),reservation.status!=='cancelled'&&/*#__PURE__*/_jsx(\"button\",{className:\"cancel-reservation-btn\",onClick:()=>cancelReservation(reservation.id),children:\"\\u041E\\u0442\\u043A\\u0430\\u0436\\u0438 \\u0440\\u0435\\u0437\\u0435\\u0440\\u0432\\u0430\\u0446\\u0438\\u044F\\u0442\\u0430\"})]},reservation.id))})]});}export default UserReservations;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","createClient","useAuth","jsx","_jsx","jsxs","_jsxs","supabaseUrl","supabaseKey","supabase","UserReservations","user","reservations","setReservations","loading","setLoading","fetchReservations","data","error","from","select","eq","email","order","ascending","console","cancelReservation","id","update","status","map","res","className","children","length","reservation","restaurants","name","date","time","tables","table_number","guests_count","onClick"],"sources":["D:/Belezza/restaurant-chain-app/src/pages/UserReservations.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../styles/Admin.css';\r\n\r\nconst supabaseUrl = 'https://lnquyopfvuikhjbjsiqk.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxucXV5b3BmdnVpa2hqYmpzaXFrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0ODA5MDEsImV4cCI6MjA2MTA1NjkwMX0.GmZ-5FzZkJyMorLGggF_Jegx2Atn0wRiNKCx4esecJw';\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction UserReservations() {\r\n  const { user } = useAuth();\r\n  const [reservations, setReservations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchReservations = async () => {\r\n      try {\r\n        if (!user) return;\r\n\r\n        // Зареждане на резервации за потребителя\r\n        const { data, error } = await supabase\r\n          .from('reservations')\r\n          .select(`\r\n            *,\r\n            restaurants:restaurant_id(id, name, address, image_url),\r\n            tables:table_id(table_number, capacity)\r\n          `)\r\n          .eq('email', user.email)\r\n          .order('date', { ascending: true });\r\n\r\n        if (error) throw error;\r\n        setReservations(data);\r\n      } catch (error) {\r\n        console.error('Грешка при зареждане на резервации:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchReservations();\r\n  }, [user]);\r\n\r\n  const cancelReservation = async (id) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('reservations')\r\n        .update({ status: 'cancelled' })\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      // Обновяване на списъка с резервации\r\n      setReservations(reservations.map(res => \r\n        res.id === id ? { ...res, status: 'cancelled' } : res\r\n      ));\r\n    } catch (error) {\r\n      console.error('Грешка при отказване на резервация:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Зареждане на резервации...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-reservations-container\">\r\n      <h1>Моите резервации</h1>\r\n      \r\n      {reservations.length === 0 ? (\r\n        <div className=\"no-reservations\">\r\n          <p>Нямате активни резервации.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"reservations-list\">\r\n          {reservations.map(reservation => (\r\n            <div key={reservation.id} className={`reservation-card ${reservation.status}`}>\r\n              <div className=\"reservation-header\">\r\n                <h2>{reservation.restaurants.name}</h2>\r\n                <span className={`reservation-status ${reservation.status}`}>\r\n                  {reservation.status === 'confirmed' ? 'Потвърдена' :\r\n                   reservation.status === 'cancelled' ? 'Отказана' : 'Чакаща'}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"reservation-details\">\r\n                <p><strong>Дата:</strong> {reservation.date}</p>\r\n                <p><strong>Час:</strong> {reservation.time}</p>\r\n                <p><strong>Маса №:</strong> {reservation.tables.table_number}</p>\r\n                <p><strong>Брой гости:</strong> {reservation.guests_count}</p>\r\n              </div>\r\n              \r\n              {reservation.status !== 'cancelled' && (\r\n                <button \r\n                  className=\"cancel-reservation-btn\"\r\n                  onClick={() => cancelReservation(reservation.id)}\r\n                >\r\n                  Откажи резервацията\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserReservations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}