{"ast":null,"code":"var _jsxFileName = \"D:\\\\Belezza\\\\restaurant-chain-app\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children,\n  adminRequired = false\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    user,\n    userRole\n  } = useAuth();\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  if (adminRequired && (!userRole || userRole.role !== 'super_admin' && userRole.role !== 'restaurant_admin')) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Във вашия ProtectedRoute.jsx\n  // Примерна имплементация на ProtectedRoute\n  function ProtectedRoute({\n    children,\n    adminRequired = false\n  }) {\n    _s();\n    const {\n      user,\n      userRole,\n      isSuperAdmin,\n      isRestaurantAdmin\n    } = useAuth();\n    const navigate = useNavigate();\n    useEffect(() => {\n      if (!user) {\n        navigate('/login');\n        return;\n      }\n      if (adminRequired) {\n        // Проверка дали функциите съществуват и дали потребителят има админ права\n        const hasAdminRights = typeof isSuperAdmin === 'function' && isSuperAdmin() || typeof isRestaurantAdmin === 'function' && isRestaurantAdmin();\n        if (!hasAdminRights) {\n          navigate('/');\n          return;\n        }\n      }\n    }, [user, adminRequired, navigate, isSuperAdmin, isRestaurantAdmin]);\n    return children;\n  }\n  _s(ProtectedRoute, \"c2emLxG02np8K8nhjh8aijFiv+Y=\", true, function () {\n    return [useAuth];\n  });\n}\n_s2(ProtectedRoute, \"G+lnKnJOyNcjs162Vhg+C9zc+ZA=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","adminRequired","_s2","_s","$RefreshSig$","user","userRole","to","fileName","_jsxFileName","lineNumber","columnNumber","role","isSuperAdmin","isRestaurantAdmin","navigate","useNavigate","useEffect","hasAdminRights","_c","$RefreshReg$"],"sources":["D:/Belezza/restaurant-chain-app/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction ProtectedRoute({ children, adminRequired = false }) {\r\n  const { user, userRole } = useAuth();\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  if (adminRequired && (!userRole || (userRole.role !== 'super_admin' && userRole.role !== 'restaurant_admin'))) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  // Във вашия ProtectedRoute.jsx\r\n  // Примерна имплементация на ProtectedRoute\r\nfunction ProtectedRoute({ children, adminRequired = false }) {\r\n  const { user, userRole, isSuperAdmin, isRestaurantAdmin } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    if (adminRequired) {\r\n      // Проверка дали функциите съществуват и дали потребителят има админ права\r\n      const hasAdminRights = \r\n        (typeof isSuperAdmin === 'function' && isSuperAdmin()) || \r\n        (typeof isRestaurantAdmin === 'function' && isRestaurantAdmin());\r\n      \r\n      if (!hasAdminRights) {\r\n        navigate('/');\r\n        return;\r\n      }\r\n    }\r\n  }, [user, adminRequired, navigate, isSuperAdmin, isRestaurantAdmin]);\r\n\r\n  return children;\r\n}\r\n}\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,aAAa,GAAG;AAAM,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3D,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGV,OAAO,CAAC,CAAC;EAEpC,IAAI,CAACS,IAAI,EAAE;IACT,oBAAOP,OAAA,CAACH,QAAQ;MAACY,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIV,aAAa,KAAK,CAACK,QAAQ,IAAKA,QAAQ,CAACM,IAAI,KAAK,aAAa,IAAIN,QAAQ,CAACM,IAAI,KAAK,kBAAmB,CAAC,EAAE;IAC7G,oBAAOd,OAAA,CAACH,QAAQ;MAACY,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;;EAEA;EACA;EACF,SAASZ,cAAcA,CAAC;IAAEC,QAAQ;IAAEC,aAAa,GAAG;EAAM,CAAC,EAAE;IAAAE,EAAA;IAC3D,MAAM;MAAEE,IAAI;MAAEC,QAAQ;MAAEO,YAAY;MAAEC;IAAkB,CAAC,GAAGlB,OAAO,CAAC,CAAC;IACrE,MAAMmB,QAAQ,GAAGC,WAAW,CAAC,CAAC;IAE9BC,SAAS,CAAC,MAAM;MACd,IAAI,CAACZ,IAAI,EAAE;QACTU,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEA,IAAId,aAAa,EAAE;QACjB;QACA,MAAMiB,cAAc,GACjB,OAAOL,YAAY,KAAK,UAAU,IAAIA,YAAY,CAAC,CAAC,IACpD,OAAOC,iBAAiB,KAAK,UAAU,IAAIA,iBAAiB,CAAC,CAAE;QAElE,IAAI,CAACI,cAAc,EAAE;UACnBH,QAAQ,CAAC,GAAG,CAAC;UACb;QACF;MACF;IACF,CAAC,EAAE,CAACV,IAAI,EAAEJ,aAAa,EAAEc,QAAQ,EAAEF,YAAY,EAAEC,iBAAiB,CAAC,CAAC;IAEpE,OAAOd,QAAQ;EACjB;EAACG,EAAA,CAxBQJ,cAAc;IAAA,QACuCH,OAAO;EAAA;AAwBrE;AAACM,GAAA,CAtCQH,cAAc;EAAA,QACMH,OAAO;AAAA;AAAAuB,EAAA,GAD3BpB,cAAc;AAwCvB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}