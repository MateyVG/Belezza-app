{"ast":null,"code":"var _jsxFileName = \"D:\\\\Belezza\\\\restaurant-chain-app\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children,\n  adminRequired = false\n}) {\n  _s();\n  var _userRole$role;\n  const {\n    user,\n    userRole,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        color: '#e0e0e0'\n      },\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0436\\u0434\\u0430\\u043D\\u0435...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Не е логнат потребител, пренасочване към логин\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Изисква админ права и потребителят не е админ\n  if (adminRequired && !(userRole !== null && userRole !== void 0 && (_userRole$role = userRole.role) !== null && _userRole$role !== void 0 && _userRole$role.includes('admin'))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Потребителят е оторизиран, показваме компонента\n  return children;\n}\n_s(ProtectedRoute, \"ToT+YPTtrO1PDeB1xMuzx/gMEr0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","adminRequired","_s","_userRole$role","user","userRole","loading","style","padding","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","to","role","includes","_c","$RefreshReg$"],"sources":["D:/Belezza/restaurant-chain-app/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction ProtectedRoute({ children, adminRequired = false }) {\r\n  const { user, userRole, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div style={{ \r\n      padding: '20px', \r\n      textAlign: 'center', \r\n      color: '#e0e0e0' \r\n    }}>\r\n      Зареждане...\r\n    </div>;\r\n  }\r\n\r\n  // Не е логнат потребител, пренасочване към логин\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // Изисква админ права и потребителят не е админ\r\n  if (adminRequired && !userRole?.role?.includes('admin')) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  // Потребителят е оторизиран, показваме компонента\r\n  return children;\r\n}\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,aAAa,GAAG;AAAM,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,cAAA;EAC3D,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EAE7C,IAAIU,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAKS,KAAK,EAAE;QACjBC,OAAO,EAAE,MAAM;QACfC,SAAS,EAAE,QAAQ;QACnBC,KAAK,EAAE;MACT,CAAE;MAAAV,QAAA,EAAC;IAEH;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACR;;EAEA;EACA,IAAI,CAACV,IAAI,EAAE;IACT,oBAAON,OAAA,CAACH,QAAQ;MAACoB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAIb,aAAa,IAAI,EAACI,QAAQ,aAARA,QAAQ,gBAAAF,cAAA,GAARE,QAAQ,CAAEW,IAAI,cAAAb,cAAA,eAAdA,cAAA,CAAgBc,QAAQ,CAAC,OAAO,CAAC,GAAE;IACvD,oBAAOnB,OAAA,CAACH,QAAQ;MAACoB,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;;EAEA;EACA,OAAOd,QAAQ;AACjB;AAACE,EAAA,CAzBQH,cAAc;EAAA,QACeH,OAAO;AAAA;AAAAsB,EAAA,GADpCnB,cAAc;AA2BvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}