{"ast":null,"code":"var _jsxFileName = \"D:\\\\Belezza\\\\restaurant-chain-app\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Суупабейс конфигурация\nconst supabaseUrl = 'https://lnquyopfvuikhjbjsiqk.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxucXV5b3BmdnVpa2hqYmpzaXFrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0ODA5MDEsImV4cCI6MjA2MTA1NjkwMX0.GmZ-5FzZkJyMorLGggF_Jegx2Atn0wRiNKCx4esecJw';\nconst supabase = createClient(supabaseUrl, supabaseKey);\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Проверка за съществуваща сесия\n    const getSession = async () => {\n      var _data$session;\n      const {\n        data,\n        error\n      } = await supabase.auth.getSession();\n      if (error) {\n        console.error('Грешка при извличане на сесия:', error.message);\n      } else if (data !== null && data !== void 0 && (_data$session = data.session) !== null && _data$session !== void 0 && _data$session.user) {\n        setUser(data.session.user);\n        // Опит за извличане на ролята на потребителя\n        fetchUserRole(data.session.user.id);\n      }\n      setLoading(false);\n    };\n    getSession();\n\n    // Слушател за промени в аутентикацията\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      if (session !== null && session !== void 0 && session.user) {\n        setUser(session.user);\n        fetchUserRole(session.user.id);\n      } else {\n        setUser(null);\n        setUserRole(null);\n      }\n      setLoading(false);\n    });\n    return () => {\n      if (authListener && typeof authListener.unsubscribe === 'function') {\n        authListener.unsubscribe();\n      }\n    };\n  }, []);\n  const fetchUserRole = async userId => {\n    try {\n      // Премахнете метода .single()\n      const {\n        data,\n        error\n      } = await supabase.from('user_roles').select('*').eq('user_id', userId);\n      if (error) {\n        console.error('Грешка при извличане на ролята:', error.message);\n      } else if (data && data.length > 0) {\n        // Вземаме първия запис от масива\n        setUserRole(data[0]);\n        console.log('Успешно извлечена роля:', data[0]);\n      } else {\n        console.log('Не е намерена роля за потребителя');\n      }\n    } catch (error) {\n      console.error('Грешка:', error.message);\n    }\n  };\n  const signIn = async (email, password) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      return {\n        data,\n        error: null\n      };\n    } catch (error) {\n      return {\n        data: null,\n        error\n      };\n    }\n  };\n  const signUp = async (email, password, userData) => {\n    try {\n      // Регистрация на потребител\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: userData\n        }\n      });\n      if (error) throw error;\n      return {\n        data,\n        error: null\n      };\n    } catch (error) {\n      return {\n        data: null,\n        error\n      };\n    }\n  };\n  const signOut = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n      return {\n        error: null\n      };\n    } catch (error) {\n      return {\n        error\n      };\n    }\n  };\n\n  // Добавени функции за админ панела\n  const isSuperAdmin = () => {\n    console.log('Проверка за super_admin, userRole:', userRole);\n    return (userRole === null || userRole === void 0 ? void 0 : userRole.role) === 'super_admin';\n  };\n  const isRestaurantAdmin = () => {\n    console.log('Проверка за restaurant_admin, userRole:', userRole);\n    return (userRole === null || userRole === void 0 ? void 0 : userRole.role) === 'restaurant_admin';\n  };\n  const value = {\n    user,\n    userRole,\n    signIn,\n    signUp,\n    signOut,\n    loading,\n    isSuperAdmin,\n    // Добавена функция\n    isRestaurantAdmin,\n    // Добавена функция\n    supabase // Експортиране на supabase клиента, нужен в админ панела\n  };\n\n  // Примерна структура на AuthContext\n  const authContext = {\n    user: {/* потребителски данни */},\n    userRole: {\n      role: 'super_admin',\n      restaurant_id: null\n    },\n    // или друга роля\n    loading: false,\n    isSuperAdmin: () => (userRole === null || userRole === void 0 ? void 0 : userRole.role) === 'super_admin',\n    isRestaurantAdmin: () => (userRole === null || userRole === void 0 ? void 0 : userRole.role) === 'restaurant_admin',\n    signIn: async (email, password) => {/* имплементация */},\n    signOut: async () => {/* имплементация */},\n    supabase: supabaseClient\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading ? children : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0436\\u0434\\u0430\\u043D\\u0435...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"q48W6cVkKdV45khIg/0akNYQAtY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","createClient","jsxDEV","_jsxDEV","AuthContext","supabaseUrl","supabaseKey","supabase","useAuth","_s","AuthProvider","children","_s2","user","setUser","userRole","setUserRole","loading","setLoading","getSession","_data$session","data","error","auth","console","message","session","fetchUserRole","id","authListener","onAuthStateChange","event","unsubscribe","userId","from","select","eq","length","log","signIn","email","password","signInWithPassword","signUp","userData","options","signOut","isSuperAdmin","role","isRestaurantAdmin","value","authContext","restaurant_id","supabaseClient","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Belezza/restaurant-chain-app/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Суупабейс конфигурация\r\nconst supabaseUrl = 'https://lnquyopfvuikhjbjsiqk.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxucXV5b3BmdnVpa2hqYmpzaXFrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0ODA5MDEsImV4cCI6MjA2MTA1NjkwMX0.GmZ-5FzZkJyMorLGggF_Jegx2Atn0wRiNKCx4esecJw';\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Проверка за съществуваща сесия\r\n    const getSession = async () => {\r\n      const { data, error } = await supabase.auth.getSession();\r\n      \r\n      if (error) {\r\n        console.error('Грешка при извличане на сесия:', error.message);\r\n      } else if (data?.session?.user) {\r\n        setUser(data.session.user);\r\n        // Опит за извличане на ролята на потребителя\r\n        fetchUserRole(data.session.user.id);\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n\r\n    getSession();\r\n\r\n    // Слушател за промени в аутентикацията\r\n    const { data: authListener } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        if (session?.user) {\r\n          setUser(session.user);\r\n          fetchUserRole(session.user.id);\r\n        } else {\r\n          setUser(null);\r\n          setUserRole(null);\r\n        }\r\n        setLoading(false);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      if (authListener && typeof authListener.unsubscribe === 'function') {\r\n        authListener.unsubscribe();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const fetchUserRole = async (userId) => {\r\n    try {\r\n      // Премахнете метода .single()\r\n      const { data, error } = await supabase\r\n        .from('user_roles')\r\n        .select('*')\r\n        .eq('user_id', userId);\r\n  \r\n      if (error) {\r\n        console.error('Грешка при извличане на ролята:', error.message);\r\n      } else if (data && data.length > 0) {\r\n        // Вземаме първия запис от масива\r\n        setUserRole(data[0]);\r\n        console.log('Успешно извлечена роля:', data[0]);\r\n      } else {\r\n        console.log('Не е намерена роля за потребителя');\r\n      }\r\n    } catch (error) {\r\n      console.error('Грешка:', error.message);\r\n    }\r\n  };\r\n\r\n  const signIn = async (email, password) => {\r\n    try {\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      return { data: null, error };\r\n    }\r\n  };\r\n\r\n  const signUp = async (email, password, userData) => {\r\n    try {\r\n      // Регистрация на потребител\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: userData,\r\n        },\r\n      });\r\n\r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      return { data: null, error };\r\n    }\r\n  };\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) throw error;\r\n      return { error: null };\r\n    } catch (error) {\r\n      return { error };\r\n    }\r\n  };\r\n\r\n  // Добавени функции за админ панела\r\n  const isSuperAdmin = () => {\r\n    console.log('Проверка за super_admin, userRole:', userRole);\r\n    return userRole?.role === 'super_admin';\r\n  };\r\n  \r\n  const isRestaurantAdmin = () => {\r\n    console.log('Проверка за restaurant_admin, userRole:', userRole);\r\n    return userRole?.role === 'restaurant_admin';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    userRole,\r\n    signIn,\r\n    signUp,\r\n    signOut,\r\n    loading,\r\n    isSuperAdmin,      // Добавена функция\r\n    isRestaurantAdmin, // Добавена функция\r\n    supabase,          // Експортиране на supabase клиента, нужен в админ панела\r\n  };\r\n\r\n// Примерна структура на AuthContext\r\nconst authContext = {\r\n  user: { /* потребителски данни */ },\r\n  userRole: { role: 'super_admin', restaurant_id: null }, // или друга роля\r\n  loading: false,\r\n  isSuperAdmin: () => userRole?.role === 'super_admin',\r\n  isRestaurantAdmin: () => userRole?.role === 'restaurant_admin',\r\n  signIn: async (email, password) => { /* имплементация */ },\r\n  signOut: async () => { /* имплементация */ },\r\n  supabase: supabaseClient\r\n};\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading ? children : <div>Зареждане...</div>}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}